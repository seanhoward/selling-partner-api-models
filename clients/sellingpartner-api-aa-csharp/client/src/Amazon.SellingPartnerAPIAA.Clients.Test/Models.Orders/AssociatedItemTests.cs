/* 
 * Selling Partner API for Orders
 *
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools. The Orders API supports orders that are two years old or less. Orders more than two years old will not show in the API response.  _Note:_ The Orders API supports orders from 2016 and after for the JP, AU, and SG marketplaces.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.Orders;
using Amazon.SellingPartnerAPIAA.Clients.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Test
{
    /// <summary>
    ///  Class for testing AssociatedItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class AssociatedItemTests
    {
        // TODO uncomment below to declare an instance variable for AssociatedItem
        //private AssociatedItem instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of AssociatedItem
            //instance = new AssociatedItem();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AssociatedItem
        /// </summary>
        [Test]
        public void AssociatedItemInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" AssociatedItem
            //Assert.IsInstanceOfType<AssociatedItem> (instance, "variable 'instance' is a AssociatedItem");
        }


        /// <summary>
        /// Test the property 'OrderId'
        /// </summary>
        [Test]
        public void OrderIdTest()
        {
            // TODO unit test for the property 'OrderId'
        }
        /// <summary>
        /// Test the property 'OrderItemId'
        /// </summary>
        [Test]
        public void OrderItemIdTest()
        {
            // TODO unit test for the property 'OrderItemId'
        }
        /// <summary>
        /// Test the property 'AssociationType'
        /// </summary>
        [Test]
        public void AssociationTypeTest()
        {
            // TODO unit test for the property 'AssociationType'
        }

    }

}
