/* 
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.FulfillmentOutbound;
using Amazon.SellingPartnerAPIAA.Clients.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Test
{
    /// <summary>
    ///  Class for testing FulfillmentPreview
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class FulfillmentPreviewTests
    {
        // TODO uncomment below to declare an instance variable for FulfillmentPreview
        //private FulfillmentPreview instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of FulfillmentPreview
            //instance = new FulfillmentPreview();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FulfillmentPreview
        /// </summary>
        [Test]
        public void FulfillmentPreviewInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" FulfillmentPreview
            //Assert.IsInstanceOfType<FulfillmentPreview> (instance, "variable 'instance' is a FulfillmentPreview");
        }


        /// <summary>
        /// Test the property 'ShippingSpeedCategory'
        /// </summary>
        [Test]
        public void ShippingSpeedCategoryTest()
        {
            // TODO unit test for the property 'ShippingSpeedCategory'
        }
        /// <summary>
        /// Test the property 'ScheduledDeliveryInfo'
        /// </summary>
        [Test]
        public void ScheduledDeliveryInfoTest()
        {
            // TODO unit test for the property 'ScheduledDeliveryInfo'
        }
        /// <summary>
        /// Test the property 'IsFulfillable'
        /// </summary>
        [Test]
        public void IsFulfillableTest()
        {
            // TODO unit test for the property 'IsFulfillable'
        }
        /// <summary>
        /// Test the property 'IsCODCapable'
        /// </summary>
        [Test]
        public void IsCODCapableTest()
        {
            // TODO unit test for the property 'IsCODCapable'
        }
        /// <summary>
        /// Test the property 'EstimatedShippingWeight'
        /// </summary>
        [Test]
        public void EstimatedShippingWeightTest()
        {
            // TODO unit test for the property 'EstimatedShippingWeight'
        }
        /// <summary>
        /// Test the property 'EstimatedFees'
        /// </summary>
        [Test]
        public void EstimatedFeesTest()
        {
            // TODO unit test for the property 'EstimatedFees'
        }
        /// <summary>
        /// Test the property 'FulfillmentPreviewShipments'
        /// </summary>
        [Test]
        public void FulfillmentPreviewShipmentsTest()
        {
            // TODO unit test for the property 'FulfillmentPreviewShipments'
        }
        /// <summary>
        /// Test the property 'UnfulfillablePreviewItems'
        /// </summary>
        [Test]
        public void UnfulfillablePreviewItemsTest()
        {
            // TODO unit test for the property 'UnfulfillablePreviewItems'
        }
        /// <summary>
        /// Test the property 'OrderUnfulfillableReasons'
        /// </summary>
        [Test]
        public void OrderUnfulfillableReasonsTest()
        {
            // TODO unit test for the property 'OrderUnfulfillableReasons'
        }
        /// <summary>
        /// Test the property 'MarketplaceId'
        /// </summary>
        [Test]
        public void MarketplaceIdTest()
        {
            // TODO unit test for the property 'MarketplaceId'
        }
        /// <summary>
        /// Test the property 'FeatureConstraints'
        /// </summary>
        [Test]
        public void FeatureConstraintsTest()
        {
            // TODO unit test for the property 'FeatureConstraints'
        }

    }

}
