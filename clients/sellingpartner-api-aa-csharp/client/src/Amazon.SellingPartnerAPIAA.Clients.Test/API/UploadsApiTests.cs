/* 
 * Selling Partner API for Uploads
 *
 * The Uploads API lets you upload files that you can programmatically access using other Selling Partner APIs, such as the A+ Content API and the Messaging API.
 *
 * OpenAPI spec version: 2020-11-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.Uploads;

namespace Amazon.SellingPartnerAPIAA.Clients.Uploads.Test
{
    /// <summary>
    ///  Class for testing UploadsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UploadsApiTests
    {
        private UploadsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new UploadsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UploadsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UploadsApi
            //Assert.IsInstanceOfType(typeof(UploadsApi), instance, "instance is a UploadsApi");
        }

        
        /// <summary>
        /// Test CreateUploadDestinationForResource
        /// </summary>
        [Test]
        public void CreateUploadDestinationForResourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> marketplaceIds = null;
            //string contentMD5 = null;
            //string resource = null;
            //string contentType = null;
            //var response = instance.CreateUploadDestinationForResource(marketplaceIds, contentMD5, resource, contentType);
            //Assert.IsInstanceOf<CreateUploadDestinationResponse> (response, "response is CreateUploadDestinationResponse");
        }
        
    }

}