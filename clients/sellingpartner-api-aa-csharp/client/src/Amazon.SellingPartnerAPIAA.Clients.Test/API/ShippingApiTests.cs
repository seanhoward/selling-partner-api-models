/* 
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.   **Note:** If you are new to the Amazon Shipping API, refer to the latest version of <a href=\"https://developer-docs.amazon.com/amazon-shipping/docs/shipping-api-v2-reference\">Amazon Shipping API (v2)</a> on the <a href=\"https://developer-docs.amazon.com/amazon-shipping/\">Amazon Shipping Developer Documentation</a> site.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.Shipping;

namespace Amazon.SellingPartnerAPIAA.Clients.Shipping.Test
{
    /// <summary>
    ///  Class for testing ShippingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ShippingApiTests
    {
        private ShippingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new ShippingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ShippingApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ShippingApi
            //Assert.IsInstanceOfType(typeof(ShippingApi), instance, "instance is a ShippingApi");
        }

        
        /// <summary>
        /// Test CancelShipment
        /// </summary>
        [Test]
        public void CancelShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //var response = instance.CancelShipment(shipmentId);
            //Assert.IsInstanceOf<CancelShipmentResponse> (response, "response is CancelShipmentResponse");
        }
        
        /// <summary>
        /// Test CreateShipment
        /// </summary>
        [Test]
        public void CreateShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateShipmentRequest body = null;
            //var response = instance.CreateShipment(body);
            //Assert.IsInstanceOf<CreateShipmentResponse> (response, "response is CreateShipmentResponse");
        }
        
        /// <summary>
        /// Test GetAccount
        /// </summary>
        [Test]
        public void GetAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAccount();
            //Assert.IsInstanceOf<GetAccountResponse> (response, "response is GetAccountResponse");
        }
        
        /// <summary>
        /// Test GetRates
        /// </summary>
        [Test]
        public void GetRatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetRatesRequest body = null;
            //var response = instance.GetRates(body);
            //Assert.IsInstanceOf<GetRatesResponse> (response, "response is GetRatesResponse");
        }
        
        /// <summary>
        /// Test GetShipment
        /// </summary>
        [Test]
        public void GetShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //var response = instance.GetShipment(shipmentId);
            //Assert.IsInstanceOf<GetShipmentResponse> (response, "response is GetShipmentResponse");
        }
        
        /// <summary>
        /// Test GetTrackingInformation
        /// </summary>
        [Test]
        public void GetTrackingInformationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trackingId = null;
            //var response = instance.GetTrackingInformation(trackingId);
            //Assert.IsInstanceOf<GetTrackingInformationResponse> (response, "response is GetTrackingInformationResponse");
        }
        
        /// <summary>
        /// Test PurchaseLabels
        /// </summary>
        [Test]
        public void PurchaseLabelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //PurchaseLabelsRequest body = null;
            //var response = instance.PurchaseLabels(shipmentId, body);
            //Assert.IsInstanceOf<PurchaseLabelsResponse> (response, "response is PurchaseLabelsResponse");
        }
        
        /// <summary>
        /// Test PurchaseShipment
        /// </summary>
        [Test]
        public void PurchaseShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseShipmentRequest body = null;
            //var response = instance.PurchaseShipment(body);
            //Assert.IsInstanceOf<PurchaseShipmentResponse> (response, "response is PurchaseShipmentResponse");
        }
        
        /// <summary>
        /// Test RetrieveShippingLabel
        /// </summary>
        [Test]
        public void RetrieveShippingLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string trackingId = null;
            //RetrieveShippingLabelRequest body = null;
            //var response = instance.RetrieveShippingLabel(shipmentId, trackingId, body);
            //Assert.IsInstanceOf<RetrieveShippingLabelResponse> (response, "response is RetrieveShippingLabelResponse");
        }
        
    }

}