/* 
 * Selling Partner API for Easy Ship
 *
 * The Selling Partner API for Easy Ship helps you build applications that help sellers manage and ship Amazon Easy Ship orders.  Your Easy Ship applications can:  * Get available time slots for packages to be scheduled for delivery.  * Schedule, reschedule, and cancel Easy Ship orders.  * Print labels, invoices, and warranties.  See the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) for the differences in Easy Ship operations by marketplace.
 *
 * OpenAPI spec version: 2022-03-23
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.EasyShip;

namespace Amazon.SellingPartnerAPIAA.Clients.EasyShip.Test
{
    /// <summary>
    ///  Class for testing EasyShipApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EasyShipApiTests
    {
        private EasyShipApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new EasyShipApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EasyShipApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EasyShipApi
            //Assert.IsInstanceOfType(typeof(EasyShipApi), instance, "instance is a EasyShipApi");
        }

        
        /// <summary>
        /// Test CreateScheduledPackage
        /// </summary>
        [Test]
        public void CreateScheduledPackageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateScheduledPackageRequest createScheduledPackageRequest = null;
            //var response = instance.CreateScheduledPackage(createScheduledPackageRequest);
            //Assert.IsInstanceOf<Package> (response, "response is Package");
        }
        
        /// <summary>
        /// Test CreateScheduledPackageBulk
        /// </summary>
        [Test]
        public void CreateScheduledPackageBulkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateScheduledPackagesRequest createScheduledPackagesRequest = null;
            //var response = instance.CreateScheduledPackageBulk(createScheduledPackagesRequest);
            //Assert.IsInstanceOf<CreateScheduledPackagesResponse> (response, "response is CreateScheduledPackagesResponse");
        }
        
        /// <summary>
        /// Test GetScheduledPackage
        /// </summary>
        [Test]
        public void GetScheduledPackageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonOrderId = null;
            //string marketplaceId = null;
            //var response = instance.GetScheduledPackage(amazonOrderId, marketplaceId);
            //Assert.IsInstanceOf<Package> (response, "response is Package");
        }
        
        /// <summary>
        /// Test ListHandoverSlots
        /// </summary>
        [Test]
        public void ListHandoverSlotsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ListHandoverSlotsRequest listHandoverSlotsRequest = null;
            //var response = instance.ListHandoverSlots(listHandoverSlotsRequest);
            //Assert.IsInstanceOf<ListHandoverSlotsResponse> (response, "response is ListHandoverSlotsResponse");
        }
        
        /// <summary>
        /// Test UpdateScheduledPackages
        /// </summary>
        [Test]
        public void UpdateScheduledPackagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateScheduledPackagesRequest updateScheduledPackagesRequest = null;
            //var response = instance.UpdateScheduledPackages(updateScheduledPackagesRequest);
            //Assert.IsInstanceOf<Packages> (response, "response is Packages");
        }
        
    }

}