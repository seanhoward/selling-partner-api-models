/* 
 * Selling Partner API for Merchant Fulfillment
 *
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.MerchantFulfillment;

namespace Amazon.SellingPartnerAPIAA.Clients.MerchantFulfillment.Test
{
    /// <summary>
    ///  Class for testing MerchantFulfillmentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MerchantFulfillmentApiTests
    {
        private MerchantFulfillmentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new MerchantFulfillmentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MerchantFulfillmentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MerchantFulfillmentApi
            //Assert.IsInstanceOfType(typeof(MerchantFulfillmentApi), instance, "instance is a MerchantFulfillmentApi");
        }

        
        /// <summary>
        /// Test CancelShipment
        /// </summary>
        [Test]
        public void CancelShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //var response = instance.CancelShipment(shipmentId);
            //Assert.IsInstanceOf<CancelShipmentResponse> (response, "response is CancelShipmentResponse");
        }
        
        /// <summary>
        /// Test CreateShipment
        /// </summary>
        [Test]
        public void CreateShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateShipmentRequest body = null;
            //var response = instance.CreateShipment(body);
            //Assert.IsInstanceOf<CreateShipmentResponse> (response, "response is CreateShipmentResponse");
        }
        
        /// <summary>
        /// Test GetAdditionalSellerInputs
        /// </summary>
        [Test]
        public void GetAdditionalSellerInputsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetAdditionalSellerInputsRequest body = null;
            //var response = instance.GetAdditionalSellerInputs(body);
            //Assert.IsInstanceOf<GetAdditionalSellerInputsResponse> (response, "response is GetAdditionalSellerInputsResponse");
        }
        
        /// <summary>
        /// Test GetEligibleShipmentServices
        /// </summary>
        [Test]
        public void GetEligibleShipmentServicesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEligibleShipmentServicesRequest body = null;
            //var response = instance.GetEligibleShipmentServices(body);
            //Assert.IsInstanceOf<GetEligibleShipmentServicesResponse> (response, "response is GetEligibleShipmentServicesResponse");
        }
        
        /// <summary>
        /// Test GetShipment
        /// </summary>
        [Test]
        public void GetShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //var response = instance.GetShipment(shipmentId);
            //Assert.IsInstanceOf<GetShipmentResponse> (response, "response is GetShipmentResponse");
        }
        
    }

}