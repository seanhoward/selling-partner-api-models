/* 
 * Selling Partner API for A+ Content Management
 *
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.AplusContent;

namespace Amazon.SellingPartnerAPIAA.Clients.AplusContent.Test
{
    /// <summary>
    ///  Class for testing AplusContentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AplusContentApiTests
    {
        private AplusContentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new AplusContentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AplusContentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AplusContentApi
            //Assert.IsInstanceOfType(typeof(AplusContentApi), instance, "instance is a AplusContentApi");
        }

        
        /// <summary>
        /// Test CreateContentDocument
        /// </summary>
        [Test]
        public void CreateContentDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceId = null;
            //PostContentDocumentRequest postContentDocumentRequest = null;
            //var response = instance.CreateContentDocument(marketplaceId, postContentDocumentRequest);
            //Assert.IsInstanceOf<PostContentDocumentResponse> (response, "response is PostContentDocumentResponse");
        }
        
        /// <summary>
        /// Test GetContentDocument
        /// </summary>
        [Test]
        public void GetContentDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //List<string> includedDataSet = null;
            //var response = instance.GetContentDocument(contentReferenceKey, marketplaceId, includedDataSet);
            //Assert.IsInstanceOf<GetContentDocumentResponse> (response, "response is GetContentDocumentResponse");
        }
        
        /// <summary>
        /// Test ListContentDocumentAsinRelations
        /// </summary>
        [Test]
        public void ListContentDocumentAsinRelationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //List<string> includedDataSet = null;
            //List<string> asinSet = null;
            //string pageToken = null;
            //var response = instance.ListContentDocumentAsinRelations(contentReferenceKey, marketplaceId, includedDataSet, asinSet, pageToken);
            //Assert.IsInstanceOf<ListContentDocumentAsinRelationsResponse> (response, "response is ListContentDocumentAsinRelationsResponse");
        }
        
        /// <summary>
        /// Test PostContentDocumentApprovalSubmission
        /// </summary>
        [Test]
        public void PostContentDocumentApprovalSubmissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //var response = instance.PostContentDocumentApprovalSubmission(contentReferenceKey, marketplaceId);
            //Assert.IsInstanceOf<PostContentDocumentApprovalSubmissionResponse> (response, "response is PostContentDocumentApprovalSubmissionResponse");
        }
        
        /// <summary>
        /// Test PostContentDocumentAsinRelations
        /// </summary>
        [Test]
        public void PostContentDocumentAsinRelationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //PostContentDocumentAsinRelationsRequest postContentDocumentAsinRelationsRequest = null;
            //var response = instance.PostContentDocumentAsinRelations(contentReferenceKey, marketplaceId, postContentDocumentAsinRelationsRequest);
            //Assert.IsInstanceOf<PostContentDocumentAsinRelationsResponse> (response, "response is PostContentDocumentAsinRelationsResponse");
        }
        
        /// <summary>
        /// Test PostContentDocumentSuspendSubmission
        /// </summary>
        [Test]
        public void PostContentDocumentSuspendSubmissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //var response = instance.PostContentDocumentSuspendSubmission(contentReferenceKey, marketplaceId);
            //Assert.IsInstanceOf<PostContentDocumentSuspendSubmissionResponse> (response, "response is PostContentDocumentSuspendSubmissionResponse");
        }
        
        /// <summary>
        /// Test SearchContentDocuments
        /// </summary>
        [Test]
        public void SearchContentDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceId = null;
            //string pageToken = null;
            //var response = instance.SearchContentDocuments(marketplaceId, pageToken);
            //Assert.IsInstanceOf<SearchContentDocumentsResponse> (response, "response is SearchContentDocumentsResponse");
        }
        
        /// <summary>
        /// Test SearchContentPublishRecords
        /// </summary>
        [Test]
        public void SearchContentPublishRecordsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceId = null;
            //string asin = null;
            //string pageToken = null;
            //var response = instance.SearchContentPublishRecords(marketplaceId, asin, pageToken);
            //Assert.IsInstanceOf<SearchContentPublishRecordsResponse> (response, "response is SearchContentPublishRecordsResponse");
        }
        
        /// <summary>
        /// Test UpdateContentDocument
        /// </summary>
        [Test]
        public void UpdateContentDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentReferenceKey = null;
            //string marketplaceId = null;
            //PostContentDocumentRequest postContentDocumentRequest = null;
            //var response = instance.UpdateContentDocument(contentReferenceKey, marketplaceId, postContentDocumentRequest);
            //Assert.IsInstanceOf<PostContentDocumentResponse> (response, "response is PostContentDocumentResponse");
        }
        
        /// <summary>
        /// Test ValidateContentDocumentAsinRelations
        /// </summary>
        [Test]
        public void ValidateContentDocumentAsinRelationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string marketplaceId = null;
            //PostContentDocumentRequest postContentDocumentRequest = null;
            //List<string> asinSet = null;
            //var response = instance.ValidateContentDocumentAsinRelations(marketplaceId, postContentDocumentRequest, asinSet);
            //Assert.IsInstanceOf<ValidateContentDocumentAsinRelationsResponse> (response, "response is ValidateContentDocumentAsinRelationsResponse");
        }
        
    }

}