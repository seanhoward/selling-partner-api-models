/* 
 * Vendor Shipments v1
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.VendorShipments;

namespace Amazon.SellingPartnerAPIAA.Clients.VendorShipments.Test
{
    /// <summary>
    ///  Class for testing VendorShipmentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class VendorShipmentsApiTests
    {
        private VendorShipmentsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new VendorShipmentsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of VendorShipmentsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' VendorShipmentsApi
            //Assert.IsInstanceOfType(typeof(VendorShipmentsApi), instance, "instance is a VendorShipmentsApi");
        }

        
        /// <summary>
        /// Test GetShipmentDetails
        /// </summary>
        [Test]
        public void GetShipmentDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? limit = null;
            //string sortOrder = null;
            //string nextToken = null;
            //DateTime? createdAfter = null;
            //DateTime? createdBefore = null;
            //DateTime? shipmentConfirmedBefore = null;
            //DateTime? shipmentConfirmedAfter = null;
            //DateTime? packageLabelCreatedBefore = null;
            //DateTime? packageLabelCreatedAfter = null;
            //DateTime? shippedBefore = null;
            //DateTime? shippedAfter = null;
            //DateTime? estimatedDeliveryBefore = null;
            //DateTime? estimatedDeliveryAfter = null;
            //DateTime? shipmentDeliveryBefore = null;
            //DateTime? shipmentDeliveryAfter = null;
            //DateTime? requestedPickUpBefore = null;
            //DateTime? requestedPickUpAfter = null;
            //DateTime? scheduledPickUpBefore = null;
            //DateTime? scheduledPickUpAfter = null;
            //string currentShipmentStatus = null;
            //string vendorShipmentIdentifier = null;
            //string buyerReferenceNumber = null;
            //string buyerWarehouseCode = null;
            //string sellerWarehouseCode = null;
            //var response = instance.GetShipmentDetails(limit, sortOrder, nextToken, createdAfter, createdBefore, shipmentConfirmedBefore, shipmentConfirmedAfter, packageLabelCreatedBefore, packageLabelCreatedAfter, shippedBefore, shippedAfter, estimatedDeliveryBefore, estimatedDeliveryAfter, shipmentDeliveryBefore, shipmentDeliveryAfter, requestedPickUpBefore, requestedPickUpAfter, scheduledPickUpBefore, scheduledPickUpAfter, currentShipmentStatus, vendorShipmentIdentifier, buyerReferenceNumber, buyerWarehouseCode, sellerWarehouseCode);
            //Assert.IsInstanceOf<GetShipmentDetailsResponse> (response, "response is GetShipmentDetailsResponse");
        }
        
        /// <summary>
        /// Test GetShipmentLabels
        /// </summary>
        [Test]
        public void GetShipmentLabelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? limit = null;
            //string sortOrder = null;
            //string nextToken = null;
            //DateTime? labelCreatedAfter = null;
            //DateTime? labelcreatedBefore = null;
            //string buyerReferenceNumber = null;
            //string vendorShipmentIdentifier = null;
            //string sellerWarehouseCode = null;
            //var response = instance.GetShipmentLabels(limit, sortOrder, nextToken, labelCreatedAfter, labelcreatedBefore, buyerReferenceNumber, vendorShipmentIdentifier, sellerWarehouseCode);
            //Assert.IsInstanceOf<GetShipmentLabels> (response, "response is GetShipmentLabels");
        }
        
        /// <summary>
        /// Test SubmitShipmentConfirmations
        /// </summary>
        [Test]
        public void SubmitShipmentConfirmationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubmitShipmentConfirmationsRequest body = null;
            //var response = instance.SubmitShipmentConfirmations(body);
            //Assert.IsInstanceOf<SubmitShipmentConfirmationsResponse> (response, "response is SubmitShipmentConfirmationsResponse");
        }
        
        /// <summary>
        /// Test SubmitShipments
        /// </summary>
        [Test]
        public void SubmitShipmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubmitShipments body = null;
            //var response = instance.SubmitShipments(body);
            //Assert.IsInstanceOf<SubmitShipmentConfirmationsResponse> (response, "response is SubmitShipmentConfirmationsResponse");
        }
        
    }

}