/* 
 * Selling Partner API for Supply Sources
 *
 * Manage configurations and capabilities of seller supply sources.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.SupplySources;

namespace Amazon.SellingPartnerAPIAA.Clients.SupplySources.Test
{
    /// <summary>
    ///  Class for testing SupplySourcesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SupplySourcesApiTests
    {
        private SupplySourcesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new SupplySourcesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SupplySourcesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SupplySourcesApi
            //Assert.IsInstanceOfType(typeof(SupplySourcesApi), instance, "instance is a SupplySourcesApi");
        }

        
        /// <summary>
        /// Test ArchiveSupplySource
        /// </summary>
        [Test]
        public void ArchiveSupplySourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string supplySourceId = null;
            //var response = instance.ArchiveSupplySource(supplySourceId);
            //Assert.IsInstanceOf<ErrorList> (response, "response is ErrorList");
        }
        
        /// <summary>
        /// Test CreateSupplySource
        /// </summary>
        [Test]
        public void CreateSupplySourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSupplySourceRequest payload = null;
            //var response = instance.CreateSupplySource(payload);
            //Assert.IsInstanceOf<CreateSupplySourceResponse> (response, "response is CreateSupplySourceResponse");
        }
        
        /// <summary>
        /// Test GetSupplySource
        /// </summary>
        [Test]
        public void GetSupplySourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string supplySourceId = null;
            //var response = instance.GetSupplySource(supplySourceId);
            //Assert.IsInstanceOf<SupplySource> (response, "response is SupplySource");
        }
        
        /// <summary>
        /// Test GetSupplySources
        /// </summary>
        [Test]
        public void GetSupplySourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string nextPageToken = null;
            //decimal? pageSize = null;
            //var response = instance.GetSupplySources(nextPageToken, pageSize);
            //Assert.IsInstanceOf<GetSupplySourcesResponse> (response, "response is GetSupplySourcesResponse");
        }
        
        /// <summary>
        /// Test UpdateSupplySource
        /// </summary>
        [Test]
        public void UpdateSupplySourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string supplySourceId = null;
            //UpdateSupplySourceRequest payload = null;
            //var response = instance.UpdateSupplySource(supplySourceId, payload);
            //Assert.IsInstanceOf<ErrorList> (response, "response is ErrorList");
        }
        
        /// <summary>
        /// Test UpdateSupplySourceStatus
        /// </summary>
        [Test]
        public void UpdateSupplySourceStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string supplySourceId = null;
            //UpdateSupplySourceStatusRequest payload = null;
            //var response = instance.UpdateSupplySourceStatus(supplySourceId, payload);
            //Assert.IsInstanceOf<ErrorList> (response, "response is ErrorList");
        }
        
    }

}