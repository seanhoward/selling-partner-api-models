/* 
 * Listings Items v2021-08-01
 *
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listings Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/listings-items-api-v2021-08-01-use-case-guide).
 *
 * OpenAPI spec version: 2021-08-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Amazon.SellingPartnerAPIAA.Clients.Client;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.ListingsItems;

namespace Amazon.SellingPartnerAPIAA.Clients.ListingsItems.Test
{
    /// <summary>
    ///  Class for testing ListingsItemsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ListingsItemsApiTests
    {
        private ListingsItemsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to initialize instance for testing
            //instance = new ListingsItemsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ListingsItemsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ListingsItemsApi
            //Assert.IsInstanceOfType(typeof(ListingsItemsApi), instance, "instance is a ListingsItemsApi");
        }

        
        /// <summary>
        /// Test DeleteListingsItem
        /// </summary>
        [Test]
        public void DeleteListingsItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sellerId = null;
            //string sku = null;
            //List<string> marketplaceIds = null;
            //string issueLocale = null;
            //var response = instance.DeleteListingsItem(sellerId, sku, marketplaceIds, issueLocale);
            //Assert.IsInstanceOf<ListingsItemSubmissionResponse> (response, "response is ListingsItemSubmissionResponse");
        }
        
        /// <summary>
        /// Test GetListingsItem
        /// </summary>
        [Test]
        public void GetListingsItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sellerId = null;
            //string sku = null;
            //List<string> marketplaceIds = null;
            //string issueLocale = null;
            //List<string> includedData = null;
            //var response = instance.GetListingsItem(sellerId, sku, marketplaceIds, issueLocale, includedData);
            //Assert.IsInstanceOf<Item> (response, "response is Item");
        }
        
        /// <summary>
        /// Test PatchListingsItem
        /// </summary>
        [Test]
        public void PatchListingsItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sellerId = null;
            //string sku = null;
            //List<string> marketplaceIds = null;
            //ListingsItemPatchRequest body = null;
            //List<string> includedData = null;
            //string mode = null;
            //string issueLocale = null;
            //var response = instance.PatchListingsItem(sellerId, sku, marketplaceIds, body, includedData, mode, issueLocale);
            //Assert.IsInstanceOf<ListingsItemSubmissionResponse> (response, "response is ListingsItemSubmissionResponse");
        }
        
        /// <summary>
        /// Test PutListingsItem
        /// </summary>
        [Test]
        public void PutListingsItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sellerId = null;
            //string sku = null;
            //List<string> marketplaceIds = null;
            //ListingsItemPutRequest body = null;
            //List<string> includedData = null;
            //string mode = null;
            //string issueLocale = null;
            //var response = instance.PutListingsItem(sellerId, sku, marketplaceIds, body, includedData, mode, issueLocale);
            //Assert.IsInstanceOf<ListingsItemSubmissionResponse> (response, "response is ListingsItemSubmissionResponse");
        }
        
    }

}