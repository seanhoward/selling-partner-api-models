/* 
 * Vendor Shipments v1
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.VendorShipments;
using Amazon.SellingPartnerAPIAA.Clients.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Test
{
    /// <summary>
    ///  Class for testing Containers
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ContainersTests
    {
        // TODO uncomment below to declare an instance variable for Containers
        //private Containers instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Containers
            //instance = new Containers();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Containers
        /// </summary>
        [Test]
        public void ContainersInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Containers
            //Assert.IsInstanceOfType<Containers> (instance, "variable 'instance' is a Containers");
        }


        /// <summary>
        /// Test the property 'ContainerType'
        /// </summary>
        [Test]
        public void ContainerTypeTest()
        {
            // TODO unit test for the property 'ContainerType'
        }
        /// <summary>
        /// Test the property 'ContainerSequenceNumber'
        /// </summary>
        [Test]
        public void ContainerSequenceNumberTest()
        {
            // TODO unit test for the property 'ContainerSequenceNumber'
        }
        /// <summary>
        /// Test the property 'ContainerIdentifiers'
        /// </summary>
        [Test]
        public void ContainerIdentifiersTest()
        {
            // TODO unit test for the property 'ContainerIdentifiers'
        }
        /// <summary>
        /// Test the property 'TrackingNumber'
        /// </summary>
        [Test]
        public void TrackingNumberTest()
        {
            // TODO unit test for the property 'TrackingNumber'
        }
        /// <summary>
        /// Test the property 'Dimensions'
        /// </summary>
        [Test]
        public void DimensionsTest()
        {
            // TODO unit test for the property 'Dimensions'
        }
        /// <summary>
        /// Test the property 'Weight'
        /// </summary>
        [Test]
        public void WeightTest()
        {
            // TODO unit test for the property 'Weight'
        }
        /// <summary>
        /// Test the property 'Tier'
        /// </summary>
        [Test]
        public void TierTest()
        {
            // TODO unit test for the property 'Tier'
        }
        /// <summary>
        /// Test the property 'Block'
        /// </summary>
        [Test]
        public void BlockTest()
        {
            // TODO unit test for the property 'Block'
        }
        /// <summary>
        /// Test the property 'InnerContainersDetails'
        /// </summary>
        [Test]
        public void InnerContainersDetailsTest()
        {
            // TODO unit test for the property 'InnerContainersDetails'
        }
        /// <summary>
        /// Test the property 'PackedItems'
        /// </summary>
        [Test]
        public void PackedItemsTest()
        {
            // TODO unit test for the property 'PackedItems'
        }

    }

}
