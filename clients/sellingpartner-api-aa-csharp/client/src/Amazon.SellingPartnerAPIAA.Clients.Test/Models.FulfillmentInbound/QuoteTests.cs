/* 
 * Fulfillment Inbound v2024-03-20
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.FulfillmentInbound;
using Amazon.SellingPartnerAPIAA.Clients.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Test
{
    /// <summary>
    ///  Class for testing Quote
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class QuoteTests
    {
        // TODO uncomment below to declare an instance variable for Quote
        //private Quote instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Quote
            //instance = new Quote();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Quote
        /// </summary>
        [Test]
        public void QuoteInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Quote
            //Assert.IsInstanceOfType<Quote> (instance, "variable 'instance' is a Quote");
        }


        /// <summary>
        /// Test the property 'Cost'
        /// </summary>
        [Test]
        public void CostTest()
        {
            // TODO unit test for the property 'Cost'
        }
        /// <summary>
        /// Test the property 'Expiration'
        /// </summary>
        [Test]
        public void ExpirationTest()
        {
            // TODO unit test for the property 'Expiration'
        }
        /// <summary>
        /// Test the property 'VoidableUntil'
        /// </summary>
        [Test]
        public void VoidableUntilTest()
        {
            // TODO unit test for the property 'VoidableUntil'
        }

    }

}
