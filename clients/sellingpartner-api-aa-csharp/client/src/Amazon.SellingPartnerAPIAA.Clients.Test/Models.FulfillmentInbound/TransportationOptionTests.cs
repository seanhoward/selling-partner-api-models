/* 
 * Fulfillment Inbound v2024-03-20
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.FulfillmentInbound;
using Amazon.SellingPartnerAPIAA.Clients.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Test
{
    /// <summary>
    ///  Class for testing TransportationOption
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class TransportationOptionTests
    {
        // TODO uncomment below to declare an instance variable for TransportationOption
        //private TransportationOption instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of TransportationOption
            //instance = new TransportationOption();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TransportationOption
        /// </summary>
        [Test]
        public void TransportationOptionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" TransportationOption
            //Assert.IsInstanceOfType<TransportationOption> (instance, "variable 'instance' is a TransportationOption");
        }


        /// <summary>
        /// Test the property 'Carrier'
        /// </summary>
        [Test]
        public void CarrierTest()
        {
            // TODO unit test for the property 'Carrier'
        }
        /// <summary>
        /// Test the property 'CarrierAppointment'
        /// </summary>
        [Test]
        public void CarrierAppointmentTest()
        {
            // TODO unit test for the property 'CarrierAppointment'
        }
        /// <summary>
        /// Test the property 'Preconditions'
        /// </summary>
        [Test]
        public void PreconditionsTest()
        {
            // TODO unit test for the property 'Preconditions'
        }
        /// <summary>
        /// Test the property 'Quote'
        /// </summary>
        [Test]
        public void QuoteTest()
        {
            // TODO unit test for the property 'Quote'
        }
        /// <summary>
        /// Test the property 'ShipmentId'
        /// </summary>
        [Test]
        public void ShipmentIdTest()
        {
            // TODO unit test for the property 'ShipmentId'
        }
        /// <summary>
        /// Test the property 'ShippingMode'
        /// </summary>
        [Test]
        public void ShippingModeTest()
        {
            // TODO unit test for the property 'ShippingMode'
        }
        /// <summary>
        /// Test the property 'ShippingSolution'
        /// </summary>
        [Test]
        public void ShippingSolutionTest()
        {
            // TODO unit test for the property 'ShippingSolution'
        }
        /// <summary>
        /// Test the property 'TransportationOptionId'
        /// </summary>
        [Test]
        public void TransportationOptionIdTest()
        {
            // TODO unit test for the property 'TransportationOptionId'
        }

    }

}
