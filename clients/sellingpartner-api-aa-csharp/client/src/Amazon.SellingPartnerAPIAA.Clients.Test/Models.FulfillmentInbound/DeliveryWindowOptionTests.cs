/* 
 * Fulfillment Inbound v2024-03-20
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Amazon.SellingPartnerAPIAA.Clients.API;
using Amazon.SellingPartnerAPIAA.Clients.Models.FulfillmentInbound;
using Amazon.SellingPartnerAPIAA.Clients.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Test
{
    /// <summary>
    ///  Class for testing DeliveryWindowOption
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class DeliveryWindowOptionTests
    {
        // TODO uncomment below to declare an instance variable for DeliveryWindowOption
        //private DeliveryWindowOption instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of DeliveryWindowOption
            //instance = new DeliveryWindowOption();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DeliveryWindowOption
        /// </summary>
        [Test]
        public void DeliveryWindowOptionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DeliveryWindowOption
            //Assert.IsInstanceOfType<DeliveryWindowOption> (instance, "variable 'instance' is a DeliveryWindowOption");
        }


        /// <summary>
        /// Test the property 'AvailabilityType'
        /// </summary>
        [Test]
        public void AvailabilityTypeTest()
        {
            // TODO unit test for the property 'AvailabilityType'
        }
        /// <summary>
        /// Test the property 'DeliveryWindowOptionId'
        /// </summary>
        [Test]
        public void DeliveryWindowOptionIdTest()
        {
            // TODO unit test for the property 'DeliveryWindowOptionId'
        }
        /// <summary>
        /// Test the property 'EndDate'
        /// </summary>
        [Test]
        public void EndDateTest()
        {
            // TODO unit test for the property 'EndDate'
        }
        /// <summary>
        /// Test the property 'StartDate'
        /// </summary>
        [Test]
        public void StartDateTest()
        {
            // TODO unit test for the property 'StartDate'
        }
        /// <summary>
        /// Test the property 'ValidUntil'
        /// </summary>
        [Test]
        public void ValidUntilTest()
        {
            // TODO unit test for the property 'ValidUntil'
        }

    }

}
