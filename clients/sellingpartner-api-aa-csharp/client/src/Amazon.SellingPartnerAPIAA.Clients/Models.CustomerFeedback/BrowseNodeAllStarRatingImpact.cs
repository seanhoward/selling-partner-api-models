/* 
 * The Selling Partner API for CustomerFeedback
 *
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * OpenAPI spec version: 2024-06-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.CustomerFeedback
{
    /// <summary>
    /// The effects of a topic on the star ratings in a browse node.
    /// </summary>
    [DataContract]
    public partial class BrowseNodeAllStarRatingImpact : IEquatable<BrowseNodeAllStarRatingImpact>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BrowseNodeAllStarRatingImpact" /> class.
        /// </summary>
        [JsonConstructor]
        protected BrowseNodeAllStarRatingImpact() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BrowseNodeAllStarRatingImpact" /> class.
        /// </summary>
        /// <param name="topTwentyFivePercentProducts">The effect of the topic on the star rating of the top 25 percent of products in the browse node. This value can be positive or negative. (required).</param>
        /// <param name="allProducts">The effect of the topic on the star rating of all products in the browse node. This value can be positive or negative. (required).</param>
        public BrowseNodeAllStarRatingImpact(float? topTwentyFivePercentProducts = default, float? allProducts = default)
        {
            // to ensure "topTwentyFivePercentProducts" is required (not null)
            if (topTwentyFivePercentProducts == null)
            {
                throw new InvalidDataException("topTwentyFivePercentProducts is a required property for BrowseNodeAllStarRatingImpact and cannot be null");
            }
            else
            {
                this.TopTwentyFivePercentProducts = topTwentyFivePercentProducts;
            }
            // to ensure "allProducts" is required (not null)
            if (allProducts == null)
            {
                throw new InvalidDataException("allProducts is a required property for BrowseNodeAllStarRatingImpact and cannot be null");
            }
            else
            {
                this.AllProducts = allProducts;
            }
        }

        /// <summary>
        /// The effect of the topic on the star rating of the top 25 percent of products in the browse node. This value can be positive or negative.
        /// </summary>
        /// <value>The effect of the topic on the star rating of the top 25 percent of products in the browse node. This value can be positive or negative.</value>
        [DataMember(Name = "topTwentyFivePercentProducts", EmitDefaultValue = false)]
        public float? TopTwentyFivePercentProducts { get; set; }

        /// <summary>
        /// The effect of the topic on the star rating of all products in the browse node. This value can be positive or negative.
        /// </summary>
        /// <value>The effect of the topic on the star rating of all products in the browse node. This value can be positive or negative.</value>
        [DataMember(Name = "allProducts", EmitDefaultValue = false)]
        public float? AllProducts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BrowseNodeAllStarRatingImpact {\n");
            sb.Append("  TopTwentyFivePercentProducts: ").Append(TopTwentyFivePercentProducts).Append("\n");
            sb.Append("  AllProducts: ").Append(AllProducts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BrowseNodeAllStarRatingImpact);
        }

        /// <summary>
        /// Returns true if BrowseNodeAllStarRatingImpact instances are equal
        /// </summary>
        /// <param name="input">Instance of BrowseNodeAllStarRatingImpact to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BrowseNodeAllStarRatingImpact input)
        {
            if (input == null)
                return false;

            return
                (
                    this.TopTwentyFivePercentProducts == input.TopTwentyFivePercentProducts ||
                    (this.TopTwentyFivePercentProducts != null &&
                    this.TopTwentyFivePercentProducts.Equals(input.TopTwentyFivePercentProducts))
                ) &&
                (
                    this.AllProducts == input.AllProducts ||
                    (this.AllProducts != null &&
                    this.AllProducts.Equals(input.AllProducts))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TopTwentyFivePercentProducts != null)
                    hashCode = hashCode * 59 + this.TopTwentyFivePercentProducts.GetHashCode();
                if (this.AllProducts != null)
                    hashCode = hashCode * 59 + this.AllProducts.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
