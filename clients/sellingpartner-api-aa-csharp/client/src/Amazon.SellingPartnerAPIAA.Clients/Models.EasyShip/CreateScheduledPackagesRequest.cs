/* 
 * Selling Partner API for Easy Ship
 *
 * The Selling Partner API for Easy Ship helps you build applications that help sellers manage and ship Amazon Easy Ship orders.  Your Easy Ship applications can:  * Get available time slots for packages to be scheduled for delivery.  * Schedule, reschedule, and cancel Easy Ship orders.  * Print labels, invoices, and warranties.  See the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) for the differences in Easy Ship operations by marketplace.
 *
 * OpenAPI spec version: 2022-03-23
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Clients.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.EasyShip
{
    /// <summary>
    /// The request body for the POST /easyShip/2022-03-23/packages/bulk API.
    /// </summary>
    [DataContract]
    public partial class CreateScheduledPackagesRequest :  IEquatable<CreateScheduledPackagesRequest>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets LabelFormat
        /// </summary>
        [DataMember(Name="labelFormat", EmitDefaultValue=false)]
        public LabelFormat LabelFormat { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateScheduledPackagesRequest" /> class.
        /// </summary>
        [JsonConstructor]
        protected CreateScheduledPackagesRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateScheduledPackagesRequest" /> class.
        /// </summary>
        /// <param name="marketplaceId">marketplaceId (required).</param>
        /// <param name="orderScheduleDetailsList">An array allowing users to specify orders to be scheduled. (required).</param>
        /// <param name="labelFormat">labelFormat (required).</param>
        public CreateScheduledPackagesRequest(string marketplaceId = default, List<OrderScheduleDetails> orderScheduleDetailsList = default, LabelFormat labelFormat = default)
        {
            // to ensure "marketplaceId" is required (not null)
            if (marketplaceId == null)
            {
                throw new InvalidDataException("marketplaceId is a required property for CreateScheduledPackagesRequest and cannot be null");
            }
            else
            {
                this.MarketplaceId = marketplaceId;
            }
            // to ensure "orderScheduleDetailsList" is required (not null)
            if (orderScheduleDetailsList == null)
            {
                throw new InvalidDataException("orderScheduleDetailsList is a required property for CreateScheduledPackagesRequest and cannot be null");
            }
            else
            {
                this.OrderScheduleDetailsList = orderScheduleDetailsList;
            }
            // to ensure "labelFormat" is required (not null)
            if (labelFormat == null)
            {
                throw new InvalidDataException("labelFormat is a required property for CreateScheduledPackagesRequest and cannot be null");
            }
            else
            {
                this.LabelFormat = labelFormat;
            }
        }
        
        /// <summary>
        /// Gets or Sets MarketplaceId
        /// </summary>
        [DataMember(Name="marketplaceId", EmitDefaultValue=false)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// An array allowing users to specify orders to be scheduled.
        /// </summary>
        /// <value>An array allowing users to specify orders to be scheduled.</value>
        [DataMember(Name="orderScheduleDetailsList", EmitDefaultValue=false)]
        public List<OrderScheduleDetails> OrderScheduleDetailsList { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateScheduledPackagesRequest {\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  OrderScheduleDetailsList: ").Append(OrderScheduleDetailsList).Append("\n");
            sb.Append("  LabelFormat: ").Append(LabelFormat).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateScheduledPackagesRequest);
        }

        /// <summary>
        /// Returns true if CreateScheduledPackagesRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateScheduledPackagesRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateScheduledPackagesRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MarketplaceId == input.MarketplaceId ||
                    (this.MarketplaceId != null &&
                    this.MarketplaceId.Equals(input.MarketplaceId))
                ) && 
                (
                    this.OrderScheduleDetailsList == input.OrderScheduleDetailsList ||
                    this.OrderScheduleDetailsList != null &&
                    this.OrderScheduleDetailsList.SequenceEqual(input.OrderScheduleDetailsList)
                ) && 
                (
                    this.LabelFormat == input.LabelFormat ||
                    (this.LabelFormat != null &&
                    this.LabelFormat.Equals(input.LabelFormat))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MarketplaceId != null)
                    hashCode = hashCode * 59 + this.MarketplaceId.GetHashCode();
                if (this.OrderScheduleDetailsList != null)
                    hashCode = hashCode * 59 + this.OrderScheduleDetailsList.GetHashCode();
                if (this.LabelFormat != null)
                    hashCode = hashCode * 59 + this.LabelFormat.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
