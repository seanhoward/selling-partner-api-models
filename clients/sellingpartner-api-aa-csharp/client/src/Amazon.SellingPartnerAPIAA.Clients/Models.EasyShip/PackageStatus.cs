/* 
 * Selling Partner API for Easy Ship
 *
 * The Selling Partner API for Easy Ship helps you build applications that help sellers manage and ship Amazon Easy Ship orders.  Your Easy Ship applications can:  * Get available time slots for packages to be scheduled for delivery.  * Schedule, reschedule, and cancel Easy Ship orders.  * Print labels, invoices, and warranties.  See the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) for the differences in Easy Ship operations by marketplace.
 *
 * OpenAPI spec version: 2022-03-23
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Clients.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.EasyShip
{
    /// <summary>
    /// The status of the package.
    /// </summary>
    /// <value>The status of the package.</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum PackageStatus
    {
        
        /// <summary>
        /// Enum ReadyForPickup for value: ReadyForPickup
        /// </summary>
        [EnumMember(Value = "ReadyForPickup")]
        ReadyForPickup = 1,
        
        /// <summary>
        /// Enum PickedUp for value: PickedUp
        /// </summary>
        [EnumMember(Value = "PickedUp")]
        PickedUp = 2,
        
        /// <summary>
        /// Enum AtOriginFC for value: AtOriginFC
        /// </summary>
        [EnumMember(Value = "AtOriginFC")]
        AtOriginFC = 3,
        
        /// <summary>
        /// Enum AtDestinationFC for value: AtDestinationFC
        /// </summary>
        [EnumMember(Value = "AtDestinationFC")]
        AtDestinationFC = 4,
        
        /// <summary>
        /// Enum Delivered for value: Delivered
        /// </summary>
        [EnumMember(Value = "Delivered")]
        Delivered = 5,
        
        /// <summary>
        /// Enum Rejected for value: Rejected
        /// </summary>
        [EnumMember(Value = "Rejected")]
        Rejected = 6,
        
        /// <summary>
        /// Enum Undeliverable for value: Undeliverable
        /// </summary>
        [EnumMember(Value = "Undeliverable")]
        Undeliverable = 7,
        
        /// <summary>
        /// Enum ReturnedToSeller for value: ReturnedToSeller
        /// </summary>
        [EnumMember(Value = "ReturnedToSeller")]
        ReturnedToSeller = 8,
        
        /// <summary>
        /// Enum LostInTransit for value: LostInTransit
        /// </summary>
        [EnumMember(Value = "LostInTransit")]
        LostInTransit = 9,
        
        /// <summary>
        /// Enum LabelCanceled for value: LabelCanceled
        /// </summary>
        [EnumMember(Value = "LabelCanceled")]
        LabelCanceled = 10,
        
        /// <summary>
        /// Enum DamagedInTransit for value: DamagedInTransit
        /// </summary>
        [EnumMember(Value = "DamagedInTransit")]
        DamagedInTransit = 11,
        
        /// <summary>
        /// Enum OutForDelivery for value: OutForDelivery
        /// </summary>
        [EnumMember(Value = "OutForDelivery")]
        OutForDelivery = 12
    }

}
