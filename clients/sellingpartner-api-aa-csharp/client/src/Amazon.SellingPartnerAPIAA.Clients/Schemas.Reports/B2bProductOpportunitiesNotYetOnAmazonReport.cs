//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Amazon.SellingPartnerAPIAA.Clients.Schemas.Reports.B2bProductOpportunitiesNotYetOnAmazon
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Provides B2B product recommendations based on predicted incremental units sold, unmet buyer demand, and other factors for products not yet listed on Amazon. The recommendations are personalized to the seller based on past sales activity.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class B2bProductOpportunitiesNotYetOnAmazonReport
    {
        /// <summary>
        /// A list of B2B product opportunity recommendation objects.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("recommendations", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Recommendations> Recommendations { get; set; } = new System.Collections.ObjectModel.Collection<Recommendations>();



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static B2bProductOpportunitiesNotYetOnAmazonReport FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<B2bProductOpportunitiesNotYetOnAmazonReport>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    /// <summary>
    /// The recommendation result object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Recommendations
    {
        /// <summary>
        /// The title of the product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("itemName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ItemName { get; set; }

        /// <summary>
        /// The brand name of the product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("brand", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Brand { get; set; }

        /// <summary>
        /// The primary product category.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("category", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Category { get; set; }

        /// <summary>
        /// The industry of the first customer who requested the product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("initialB2bBuyerIndustry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string InitialB2bBuyerIndustry { get; set; }

        /// <summary>
        /// The Manufacturer Part Number (MPN) of the product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("partNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PartNumber { get; set; }

        /// <summary>
        /// The European Article Number (EAN) of the product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ean", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Ean { get; set; }

        /// <summary>
        /// The Universal Product Code (UPC) of the product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("upc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Upc { get; set; }

        /// <summary>
        /// The Model Number of the product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("modelNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ModelNumber { get; set; }

        /// <summary>
        /// The International Standard Book Number (ISBN) of the product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("isbn", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Isbn { get; set; }

        /// <summary>
        /// The date the product may not be on Amazon as the result of the customer request.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("initialB2bBuyerRequestedDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string InitialB2bBuyerRequestedDate { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static Recommendations FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<Recommendations>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }
}