/* 
 * Orders v0
 *
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Clients.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.Orders
{
    /// <summary>
    /// The request body for the &#x60;updateVerificationStatus&#x60; operation.
    /// </summary>
    [DataContract]
    public partial class UpdateVerificationStatusRequest :  IEquatable<UpdateVerificationStatusRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateVerificationStatusRequest" /> class.
        /// </summary>
        [JsonConstructor]
        protected UpdateVerificationStatusRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateVerificationStatusRequest" /> class.
        /// </summary>
        /// <param name="regulatedOrderVerificationStatus">The updated values of the &#x60;VerificationStatus&#x60; field. (required).</param>
        public UpdateVerificationStatusRequest(UpdateVerificationStatusRequestBody regulatedOrderVerificationStatus = default)
        {
            // to ensure "regulatedOrderVerificationStatus" is required (not null)
            if (regulatedOrderVerificationStatus == null)
            {
                throw new InvalidDataException("regulatedOrderVerificationStatus is a required property for UpdateVerificationStatusRequest and cannot be null");
            }
            else
            {
                this.RegulatedOrderVerificationStatus = regulatedOrderVerificationStatus;
            }
        }
        
        /// <summary>
        /// The updated values of the &#x60;VerificationStatus&#x60; field.
        /// </summary>
        /// <value>The updated values of the &#x60;VerificationStatus&#x60; field.</value>
        [DataMember(Name="regulatedOrderVerificationStatus", EmitDefaultValue=false)]
        public UpdateVerificationStatusRequestBody RegulatedOrderVerificationStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UpdateVerificationStatusRequest {\n");
            sb.Append("  RegulatedOrderVerificationStatus: ").Append(RegulatedOrderVerificationStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateVerificationStatusRequest);
        }

        /// <summary>
        /// Returns true if UpdateVerificationStatusRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateVerificationStatusRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateVerificationStatusRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RegulatedOrderVerificationStatus == input.RegulatedOrderVerificationStatus ||
                    (this.RegulatedOrderVerificationStatus != null &&
                    this.RegulatedOrderVerificationStatus.Equals(input.RegulatedOrderVerificationStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RegulatedOrderVerificationStatus != null)
                    hashCode = hashCode * 59 + this.RegulatedOrderVerificationStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
