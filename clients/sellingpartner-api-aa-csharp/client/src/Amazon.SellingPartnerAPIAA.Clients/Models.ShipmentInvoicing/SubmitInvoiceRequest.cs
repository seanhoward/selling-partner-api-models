/* 
 * Selling Partner API for Shipment Invoicing
 *
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partnerâ€™s Fulfillment by Amazon (FBA) orders.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.ShipmentInvoicing
{
    /// <summary>
    /// The request schema for the submitInvoice operation.
    /// </summary>
    [DataContract]
    public partial class SubmitInvoiceRequest : IEquatable<SubmitInvoiceRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitInvoiceRequest" /> class.
        /// </summary>
        [JsonConstructor]
        protected SubmitInvoiceRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitInvoiceRequest" /> class.
        /// </summary>
        /// <param name="invoiceContent">invoiceContent (required).</param>
        /// <param name="marketplaceId">An Amazon marketplace identifier..</param>
        /// <param name="contentMD5Value">MD5 sum for validating the invoice data. For more information about calculating this value, see [Working with Content-MD5 Checksums](https://docs.developer.amazonservices.com/en_US/dev_guide/DG_MD5.html). (required).</param>
        public SubmitInvoiceRequest(byte[] invoiceContent = default, string marketplaceId = default, string contentMD5Value = default)
        {
            // to ensure "invoiceContent" is required (not null)
            if (invoiceContent == null)
            {
                throw new InvalidDataException("invoiceContent is a required property for SubmitInvoiceRequest and cannot be null");
            }
            else
            {
                this.InvoiceContent = invoiceContent;
            }
            // to ensure "contentMD5Value" is required (not null)
            if (contentMD5Value == null)
            {
                throw new InvalidDataException("contentMD5Value is a required property for SubmitInvoiceRequest and cannot be null");
            }
            else
            {
                this.ContentMD5Value = contentMD5Value;
            }
            this.MarketplaceId = marketplaceId;
        }

        /// <summary>
        /// Gets or Sets InvoiceContent
        /// </summary>
        [DataMember(Name = "InvoiceContent", EmitDefaultValue = false)]
        public byte[] InvoiceContent { get; set; }

        /// <summary>
        /// An Amazon marketplace identifier.
        /// </summary>
        /// <value>An Amazon marketplace identifier.</value>
        [DataMember(Name = "MarketplaceId", EmitDefaultValue = false)]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// MD5 sum for validating the invoice data. For more information about calculating this value, see [Working with Content-MD5 Checksums](https://docs.developer.amazonservices.com/en_US/dev_guide/DG_MD5.html).
        /// </summary>
        /// <value>MD5 sum for validating the invoice data. For more information about calculating this value, see [Working with Content-MD5 Checksums](https://docs.developer.amazonservices.com/en_US/dev_guide/DG_MD5.html).</value>
        [DataMember(Name = "ContentMD5Value", EmitDefaultValue = false)]
        public string ContentMD5Value { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SubmitInvoiceRequest {\n");
            sb.Append("  InvoiceContent: ").Append(InvoiceContent).Append("\n");
            sb.Append("  MarketplaceId: ").Append(MarketplaceId).Append("\n");
            sb.Append("  ContentMD5Value: ").Append(ContentMD5Value).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SubmitInvoiceRequest);
        }

        /// <summary>
        /// Returns true if SubmitInvoiceRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of SubmitInvoiceRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SubmitInvoiceRequest input)
        {
            if (input == null)
                return false;

            return
                (
                    this.InvoiceContent == input.InvoiceContent ||
                    (this.InvoiceContent != null &&
                    this.InvoiceContent.Equals(input.InvoiceContent))
                ) &&
                (
                    this.MarketplaceId == input.MarketplaceId ||
                    (this.MarketplaceId != null &&
                    this.MarketplaceId.Equals(input.MarketplaceId))
                ) &&
                (
                    this.ContentMD5Value == input.ContentMD5Value ||
                    (this.ContentMD5Value != null &&
                    this.ContentMD5Value.Equals(input.ContentMD5Value))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.InvoiceContent != null)
                    hashCode = hashCode * 59 + this.InvoiceContent.GetHashCode();
                if (this.MarketplaceId != null)
                    hashCode = hashCode * 59 + this.MarketplaceId.GetHashCode();
                if (this.ContentMD5Value != null)
                    hashCode = hashCode * 59 + this.ContentMD5Value.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
