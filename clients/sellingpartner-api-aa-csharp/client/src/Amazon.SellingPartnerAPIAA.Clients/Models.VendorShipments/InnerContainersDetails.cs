/* 
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Clients.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.VendorShipments
{
    /// <summary>
    /// Details of the innerContainersDetails.
    /// </summary>
    [DataContract]
    public partial class InnerContainersDetails :  IEquatable<InnerContainersDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InnerContainersDetails" /> class.
        /// </summary>
        /// <param name="containerCount">Total containers as part of the shipment.</param>
        /// <param name="containerSequenceNumbers">Container sequence numbers that are involved in this shipment..</param>
        public InnerContainersDetails(int? containerCount = default(int?), List<ContainerSequenceNumbers> containerSequenceNumbers = default(List<ContainerSequenceNumbers>))
        {
            this.ContainerCount = containerCount;
            this.ContainerSequenceNumbers = containerSequenceNumbers;
        }
        
        /// <summary>
        /// Total containers as part of the shipment
        /// </summary>
        /// <value>Total containers as part of the shipment</value>
        [DataMember(Name="containerCount", EmitDefaultValue=false)]
        public int? ContainerCount { get; set; }

        /// <summary>
        /// Container sequence numbers that are involved in this shipment.
        /// </summary>
        /// <value>Container sequence numbers that are involved in this shipment.</value>
        [DataMember(Name="containerSequenceNumbers", EmitDefaultValue=false)]
        public List<ContainerSequenceNumbers> ContainerSequenceNumbers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InnerContainersDetails {\n");
            sb.Append("  ContainerCount: ").Append(ContainerCount).Append("\n");
            sb.Append("  ContainerSequenceNumbers: ").Append(ContainerSequenceNumbers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InnerContainersDetails);
        }

        /// <summary>
        /// Returns true if InnerContainersDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of InnerContainersDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InnerContainersDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ContainerCount == input.ContainerCount ||
                    (this.ContainerCount != null &&
                    this.ContainerCount.Equals(input.ContainerCount))
                ) && 
                (
                    this.ContainerSequenceNumbers == input.ContainerSequenceNumbers ||
                    this.ContainerSequenceNumbers != null &&
                    this.ContainerSequenceNumbers.SequenceEqual(input.ContainerSequenceNumbers)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ContainerCount != null)
                    hashCode = hashCode * 59 + this.ContainerCount.GetHashCode();
                if (this.ContainerSequenceNumbers != null)
                    hashCode = hashCode * 59 + this.ContainerSequenceNumbers.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
