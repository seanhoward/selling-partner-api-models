/* 
 * The Selling Partner API for Amazon Warehousing and Distribution
 *
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.Awd
{
    /// <summary>
    /// Shipment labels.
    /// </summary>
    [DataContract]
    public partial class ShipmentLabels : IEquatable<ShipmentLabels>, IValidatableObject
    {
        /// <summary>
        /// Status of label generation.
        /// </summary>
        /// <value>Status of label generation.</value>
        [DataMember(Name = "labelStatus", EmitDefaultValue = false)]
        public LabelStatus LabelStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentLabels" /> class.
        /// </summary>
        [JsonConstructor]
        protected ShipmentLabels() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentLabels" /> class.
        /// </summary>
        /// <param name="labelDownloadURL">The URL to download shipment labels. The URL is active for 600 seconds from generation..</param>
        /// <param name="labelStatus">Status of label generation. (required).</param>
        public ShipmentLabels(string labelDownloadURL = default, LabelStatus labelStatus = default)
        {
            // to ensure "labelStatus" is required (not null)
            if (labelStatus == null)
            {
                throw new InvalidDataException("labelStatus is a required property for ShipmentLabels and cannot be null");
            }
            else
            {
                this.LabelStatus = labelStatus;
            }
            this.LabelDownloadURL = labelDownloadURL;
        }

        /// <summary>
        /// The URL to download shipment labels. The URL is active for 600 seconds from generation.
        /// </summary>
        /// <value>The URL to download shipment labels. The URL is active for 600 seconds from generation.</value>
        [DataMember(Name = "labelDownloadURL", EmitDefaultValue = false)]
        public string LabelDownloadURL { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ShipmentLabels {\n");
            sb.Append("  LabelDownloadURL: ").Append(LabelDownloadURL).Append("\n");
            sb.Append("  LabelStatus: ").Append(LabelStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShipmentLabels);
        }

        /// <summary>
        /// Returns true if ShipmentLabels instances are equal
        /// </summary>
        /// <param name="input">Instance of ShipmentLabels to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShipmentLabels input)
        {
            if (input == null)
                return false;

            return
                (
                    this.LabelDownloadURL == input.LabelDownloadURL ||
                    (this.LabelDownloadURL != null &&
                    this.LabelDownloadURL.Equals(input.LabelDownloadURL))
                ) &&
                (
                    this.LabelStatus == input.LabelStatus ||
                    (this.LabelStatus != null &&
                    this.LabelStatus.Equals(input.LabelStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LabelDownloadURL != null)
                    hashCode = hashCode * 59 + this.LabelDownloadURL.GetHashCode();
                if (this.LabelStatus != null)
                    hashCode = hashCode * 59 + this.LabelStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
