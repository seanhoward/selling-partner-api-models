/* 
 * The Selling Partner API for Amazon Warehousing and Distribution
 *
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory. 
 *
 * OpenAPI spec version: 2024-05-09
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Clients.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.Awd
{
    /// <summary>
    /// A list of inbound shipment summaries filtered by the attributes specified in the request.
    /// </summary>
    [DataContract]
    public partial class ShipmentListing :  IEquatable<ShipmentListing>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShipmentListing" /> class.
        /// </summary>
        /// <param name="nextToken">Token to retrieve the next set of paginated results..</param>
        /// <param name="shipments">List of inbound shipment summaries..</param>
        public ShipmentListing(string nextToken = default(string), List<InboundShipmentSummary> shipments = default(List<InboundShipmentSummary>))
        {
            this.NextToken = nextToken;
            this.Shipments = shipments;
        }
        
        /// <summary>
        /// Token to retrieve the next set of paginated results.
        /// </summary>
        /// <value>Token to retrieve the next set of paginated results.</value>
        [DataMember(Name="nextToken", EmitDefaultValue=false)]
        public string NextToken { get; set; }

        /// <summary>
        /// List of inbound shipment summaries.
        /// </summary>
        /// <value>List of inbound shipment summaries.</value>
        [DataMember(Name="shipments", EmitDefaultValue=false)]
        public List<InboundShipmentSummary> Shipments { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ShipmentListing {\n");
            sb.Append("  NextToken: ").Append(NextToken).Append("\n");
            sb.Append("  Shipments: ").Append(Shipments).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShipmentListing);
        }

        /// <summary>
        /// Returns true if ShipmentListing instances are equal
        /// </summary>
        /// <param name="input">Instance of ShipmentListing to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShipmentListing input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.NextToken == input.NextToken ||
                    (this.NextToken != null &&
                    this.NextToken.Equals(input.NextToken))
                ) && 
                (
                    this.Shipments == input.Shipments ||
                    this.Shipments != null &&
                    this.Shipments.SequenceEqual(input.Shipments)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NextToken != null)
                    hashCode = hashCode * 59 + this.NextToken.GetHashCode();
                if (this.Shipments != null)
                    hashCode = hashCode * 59 + this.Shipments.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
