/* 
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-05-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Clients.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.ProductPricing
{
    /// <summary>
    /// Describes the segment in which the offer is featured.
    /// </summary>
    [DataContract]
    public partial class FeaturedOfferSegment :  IEquatable<FeaturedOfferSegment>, IValidatableObject
    {
        /// <summary>
        /// The customer membership type that makes up this segment
        /// </summary>
        /// <value>The customer membership type that makes up this segment</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CustomerMembershipEnum
        {
            
            /// <summary>
            /// Enum PRIME for value: PRIME
            /// </summary>
            [EnumMember(Value = "PRIME")]
            PRIME = 1,
            
            /// <summary>
            /// Enum NONPRIME for value: NON_PRIME
            /// </summary>
            [EnumMember(Value = "NON_PRIME")]
            NONPRIME = 2
        }

        /// <summary>
        /// The customer membership type that makes up this segment
        /// </summary>
        /// <value>The customer membership type that makes up this segment</value>
        [DataMember(Name="customerMembership", EmitDefaultValue=false)]
        public CustomerMembershipEnum CustomerMembership { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="FeaturedOfferSegment" /> class.
        /// </summary>
        [JsonConstructor]
        protected FeaturedOfferSegment() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FeaturedOfferSegment" /> class.
        /// </summary>
        /// <param name="customerMembership">The customer membership type that makes up this segment (required).</param>
        /// <param name="segmentDetails">The details about the segment. (required).</param>
        public FeaturedOfferSegment(CustomerMembershipEnum customerMembership = default, SegmentDetails segmentDetails = default)
        {
            // to ensure "customerMembership" is required (not null)
            if (customerMembership == null)
            {
                throw new InvalidDataException("customerMembership is a required property for FeaturedOfferSegment and cannot be null");
            }
            else
            {
                this.CustomerMembership = customerMembership;
            }
            // to ensure "segmentDetails" is required (not null)
            if (segmentDetails == null)
            {
                throw new InvalidDataException("segmentDetails is a required property for FeaturedOfferSegment and cannot be null");
            }
            else
            {
                this.SegmentDetails = segmentDetails;
            }
        }
        

        /// <summary>
        /// The details about the segment.
        /// </summary>
        /// <value>The details about the segment.</value>
        [DataMember(Name="segmentDetails", EmitDefaultValue=false)]
        public SegmentDetails SegmentDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FeaturedOfferSegment {\n");
            sb.Append("  CustomerMembership: ").Append(CustomerMembership).Append("\n");
            sb.Append("  SegmentDetails: ").Append(SegmentDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FeaturedOfferSegment);
        }

        /// <summary>
        /// Returns true if FeaturedOfferSegment instances are equal
        /// </summary>
        /// <param name="input">Instance of FeaturedOfferSegment to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FeaturedOfferSegment input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CustomerMembership == input.CustomerMembership ||
                    (this.CustomerMembership != null &&
                    this.CustomerMembership.Equals(input.CustomerMembership))
                ) && 
                (
                    this.SegmentDetails == input.SegmentDetails ||
                    (this.SegmentDetails != null &&
                    this.SegmentDetails.Equals(input.SegmentDetails))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CustomerMembership != null)
                    hashCode = hashCode * 59 + this.CustomerMembership.GetHashCode();
                if (this.SegmentDetails != null)
                    hashCode = hashCode * 59 + this.SegmentDetails.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
