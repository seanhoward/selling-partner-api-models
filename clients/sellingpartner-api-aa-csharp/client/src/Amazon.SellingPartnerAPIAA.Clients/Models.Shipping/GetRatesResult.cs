/* 
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.   **Note:** If you are new to the Amazon Shipping API, refer to the latest version of <a href=\"https://developer-docs.amazon.com/amazon-shipping/docs/shipping-api-v2-reference\">Amazon Shipping API (v2)</a> on the <a href=\"https://developer-docs.amazon.com/amazon-shipping/\">Amazon Shipping Developer Documentation</a> site.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Clients.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.Shipping
{
    /// <summary>
    /// The payload schema for the getRates operation.
    /// </summary>
    [DataContract]
    public partial class GetRatesResult :  IEquatable<GetRatesResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetRatesResult" /> class.
        /// </summary>
        [JsonConstructor]
        protected GetRatesResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetRatesResult" /> class.
        /// </summary>
        /// <param name="serviceRates">serviceRates (required).</param>
        public GetRatesResult(ServiceRateList serviceRates = default)
        {
            // to ensure "serviceRates" is required (not null)
            if (serviceRates == null)
            {
                throw new InvalidDataException("serviceRates is a required property for GetRatesResult and cannot be null");
            }
            else
            {
                this.ServiceRates = serviceRates;
            }
        }
        
        /// <summary>
        /// Gets or Sets ServiceRates
        /// </summary>
        [DataMember(Name="serviceRates", EmitDefaultValue=false)]
        public ServiceRateList ServiceRates { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetRatesResult {\n");
            sb.Append("  ServiceRates: ").Append(ServiceRates).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetRatesResult);
        }

        /// <summary>
        /// Returns true if GetRatesResult instances are equal
        /// </summary>
        /// <param name="input">Instance of GetRatesResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetRatesResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ServiceRates == input.ServiceRates ||
                    (this.ServiceRates != null &&
                    this.ServiceRates.Equals(input.ServiceRates))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ServiceRates != null)
                    hashCode = hashCode * 59 + this.ServiceRates.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
