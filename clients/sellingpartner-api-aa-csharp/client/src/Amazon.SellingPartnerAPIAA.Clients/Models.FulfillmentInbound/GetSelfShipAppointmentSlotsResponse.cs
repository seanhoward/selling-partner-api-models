/* 
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.FulfillmentInbound
{
    /// <summary>
    /// The &#x60;getSelfShipAppointmentSlots&#x60; response.
    /// </summary>
    [DataContract]
    public partial class GetSelfShipAppointmentSlotsResponse : IEquatable<GetSelfShipAppointmentSlotsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetSelfShipAppointmentSlotsResponse" /> class.
        /// </summary>
        [JsonConstructor]
        protected GetSelfShipAppointmentSlotsResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetSelfShipAppointmentSlotsResponse" /> class.
        /// </summary>
        /// <param name="pagination">pagination.</param>
        /// <param name="selfShipAppointmentSlotsAvailability">selfShipAppointmentSlotsAvailability (required).</param>
        public GetSelfShipAppointmentSlotsResponse(Pagination pagination = default, SelfShipAppointmentSlotsAvailability selfShipAppointmentSlotsAvailability = default)
        {
            // to ensure "selfShipAppointmentSlotsAvailability" is required (not null)
            if (selfShipAppointmentSlotsAvailability == null)
            {
                throw new InvalidDataException("selfShipAppointmentSlotsAvailability is a required property for GetSelfShipAppointmentSlotsResponse and cannot be null");
            }
            else
            {
                this.SelfShipAppointmentSlotsAvailability = selfShipAppointmentSlotsAvailability;
            }
            this.Pagination = pagination;
        }

        /// <summary>
        /// Gets or Sets Pagination
        /// </summary>
        [DataMember(Name = "pagination", EmitDefaultValue = false)]
        public Pagination Pagination { get; set; }

        /// <summary>
        /// Gets or Sets SelfShipAppointmentSlotsAvailability
        /// </summary>
        [DataMember(Name = "selfShipAppointmentSlotsAvailability", EmitDefaultValue = false)]
        public SelfShipAppointmentSlotsAvailability SelfShipAppointmentSlotsAvailability { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetSelfShipAppointmentSlotsResponse {\n");
            sb.Append("  Pagination: ").Append(Pagination).Append("\n");
            sb.Append("  SelfShipAppointmentSlotsAvailability: ").Append(SelfShipAppointmentSlotsAvailability).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetSelfShipAppointmentSlotsResponse);
        }

        /// <summary>
        /// Returns true if GetSelfShipAppointmentSlotsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of GetSelfShipAppointmentSlotsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetSelfShipAppointmentSlotsResponse input)
        {
            if (input == null)
                return false;

            return
                (
                    this.Pagination == input.Pagination ||
                    (this.Pagination != null &&
                    this.Pagination.Equals(input.Pagination))
                ) &&
                (
                    this.SelfShipAppointmentSlotsAvailability == input.SelfShipAppointmentSlotsAvailability ||
                    (this.SelfShipAppointmentSlotsAvailability != null &&
                    this.SelfShipAppointmentSlotsAvailability.Equals(input.SelfShipAppointmentSlotsAvailability))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Pagination != null)
                    hashCode = hashCode * 59 + this.Pagination.GetHashCode();
                if (this.SelfShipAppointmentSlotsAvailability != null)
                    hashCode = hashCode * 59 + this.SelfShipAppointmentSlotsAvailability.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
