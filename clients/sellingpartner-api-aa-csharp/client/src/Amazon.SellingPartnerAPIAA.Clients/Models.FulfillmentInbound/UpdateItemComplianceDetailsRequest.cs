/* 
 * Fulfillment Inbound v2024-03-20
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPIAA.Clients.Client.SwaggerDateConverter;

namespace Amazon.SellingPartnerAPIAA.Clients.Models.FulfillmentInbound
{
    /// <summary>
    /// The &#x60;updateItemComplianceDetails&#x60; request.
    /// </summary>
    [DataContract]
    public partial class UpdateItemComplianceDetailsRequest :  IEquatable<UpdateItemComplianceDetailsRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateItemComplianceDetailsRequest" /> class.
        /// </summary>
        [JsonConstructor]
        protected UpdateItemComplianceDetailsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateItemComplianceDetailsRequest" /> class.
        /// </summary>
        /// <param name="msku">The merchant SKU, a merchant-supplied identifier for a specific SKU. (required).</param>
        /// <param name="taxDetails">taxDetails (required).</param>
        public UpdateItemComplianceDetailsRequest(string msku = default, TaxDetails taxDetails = default)
        {
            // to ensure "msku" is required (not null)
            if (msku == null)
            {
                throw new InvalidDataException("msku is a required property for UpdateItemComplianceDetailsRequest and cannot be null");
            }
            else
            {
                this.Msku = msku;
            }
            // to ensure "taxDetails" is required (not null)
            if (taxDetails == null)
            {
                throw new InvalidDataException("taxDetails is a required property for UpdateItemComplianceDetailsRequest and cannot be null");
            }
            else
            {
                this.TaxDetails = taxDetails;
            }
        }
        
        /// <summary>
        /// The merchant SKU, a merchant-supplied identifier for a specific SKU.
        /// </summary>
        /// <value>The merchant SKU, a merchant-supplied identifier for a specific SKU.</value>
        [DataMember(Name="msku", EmitDefaultValue=false)]
        public string Msku { get; set; }

        /// <summary>
        /// Gets or Sets TaxDetails
        /// </summary>
        [DataMember(Name="taxDetails", EmitDefaultValue=false)]
        public TaxDetails TaxDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UpdateItemComplianceDetailsRequest {\n");
            sb.Append("  Msku: ").Append(Msku).Append("\n");
            sb.Append("  TaxDetails: ").Append(TaxDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateItemComplianceDetailsRequest);
        }

        /// <summary>
        /// Returns true if UpdateItemComplianceDetailsRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateItemComplianceDetailsRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateItemComplianceDetailsRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Msku == input.Msku ||
                    (this.Msku != null &&
                    this.Msku.Equals(input.Msku))
                ) && 
                (
                    this.TaxDetails == input.TaxDetails ||
                    (this.TaxDetails != null &&
                    this.TaxDetails.Equals(input.TaxDetails))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Msku != null)
                    hashCode = hashCode * 59 + this.Msku.GetHashCode();
                if (this.TaxDetails != null)
                    hashCode = hashCode * 59 + this.TaxDetails.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Msku (string) maxLength
            if(this.Msku != null && this.Msku.Length > 40)
            {
                yield return new ValidationResult("Invalid value for Msku, length must be less than 40.", new [] { "Msku" });
            }

            // Msku (string) minLength
            if(this.Msku != null && this.Msku.Length < 1)
            {
                yield return new ValidationResult("Invalid value for Msku, length must be greater than 1.", new [] { "Msku" });
            }

            yield break;
        }
    }

}
